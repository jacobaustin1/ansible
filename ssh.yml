---
# Jacob Austin
# SSH Server config (updated 2025-10-20)
# - Permit both 10.1.0.x and 10.0.0.x subnets using user@subnet patterns in AllowUsers
# - Build AllowUsers entries for each allowed user × each permitted subnet
# - Ensure .ssh + authorized_keys created for all allowed users (including admin)
# - Create dedicated ssh auth rsyslog config and log file
# - Minor robustness improvements (initialize facts, explicit file creation)
- name: SSH Server
  hosts: localhost
  become: yes
  vars:
    ssh_admin_user: greyteam
    ssh_admin_password: "{{ 'GreyTeamIsAwesome123!' | password_hash('sha512') }}"

    # Subnets to allow (wildcard form)
    ssh_allowed_subnets:
      - "10.1.0.*"
      - "10.0.0.*"

    # Directory for SFTP uploads
    remote_file_dir: /home/{{ ssh_admin_user }}/sftp

    # Team/user credentials
    team_creds:
      - { name: "greyteam2",   passwd_plain: "GreyTeamIsAwesome123!" }
      - { name: "ansible",     passwd_plain: "GreyTeamIsAwesome123!" }
      - { name: "redteam",     passwd_plain: "DefaultPassword123!" }
      - { name: "blueteam",    passwd_plain: "DefaultPassword123!" }
      - { name: "john.hammond",passwd_plain: "DefaultPassword123!" }
      - { name: "henry.wu",    passwd_plain: "DefaultPassword123!" }
      - { name: "robert.muldoon", passwd_plain: "DefaultPassword123!" }
      - { name: "john.arnold", passwd_plain: "DefaultPassword123!" }
      - { name: "dennis.nedry",passwd_plain: "DefaultPassword123!" }

    # List of users allowed to SSH (admin + all team members)
    ssh_allowed_users: "{{ [ssh_admin_user] + (team_creds | map(attribute='name') | list) }}"

    # Path to the custom ssh auth logfile
    ssh_auth_log: /var/log/ssh_auth.log
    sshd_config_path: /etc/ssh/sshd_config
    ssh_listen_port: 22

  tasks:

    - name: Ensure apt cache is updated
      apt:
        update_cache: yes
        cache_valid_time: 3600

    - name: Ensure OpenSSH is installed
      apt:
        name: openssh-server
        state: present

    - name: Ensure SSH is running
      service:
        name: ssh
        state: started
        enabled: yes

    - name: Create admin user
      user:
        name: "{{ ssh_admin_user }}"
        password: "{{ ssh_admin_password }}"
        shell: /bin/bash
        create_home: yes
        state: present

    - name: Give admin passwordless sudo
      lineinfile:
        dest: /etc/sudoers
        state: present
        regexp: "^{{ ssh_admin_user }}"
        line: "{{ ssh_admin_user }} ALL=(ALL) NOPASSWD:ALL"
        validate: 'visudo -cf %s'

    - name: Create/update team users and set hashed passwords
      user:
        name: "{{ item.name }}"
        password: "{{ (item.passwd_plain) | password_hash('sha512') }}"
        shell: /bin/bash
        create_home: yes
        state: present
      loop: "{{ team_creds }}"
      loop_control:
        label: "{{ item.name }}"

    - name: Initialize AllowUsers-with-host list
      set_fact:
        ssh_allowed_users_with_host: []

    - name: Build AllowUsers list for each user × subnet
      set_fact:
        ssh_allowed_users_with_host: "{{ ssh_allowed_users_with_host | default([]) + [ item[0] + '@' + item[1] ] }}"
      with_nested:
        - "{{ ssh_allowed_users }}"
        - "{{ ssh_allowed_subnets }}"
      loop_control:
        label: "{{ item[0] }}@{{ item[1] }}"

    - name: Ensure each allowed user has a .ssh dir with correct perms
      file:
        path: "/home/{{ item }}/.ssh"
        state: directory
        owner: "{{ item }}"
        group: "{{ item }}"
        mode: '0700'
      loop: "{{ ssh_allowed_users }}"

    - name: Ensure authorized_keys exists for each allowed user (placeholder)
      file:
        path: "/home/{{ item }}/.ssh/authorized_keys"
        state: touch
        owner: "{{ item }}"
        group: "{{ item }}"
        mode: '0600'
      loop: "{{ ssh_allowed_users }}"

    - name: Configure SSH daemon (AllowUsers using user@subnet patterns)
      blockinfile:
        path: "{{ sshd_config_path }}"
        marker: "# {mark} ANSIBLE MANAGED SSH CUSTOM"
        block: |
          # Custom Config
          Protocol 2
          PermitRootLogin no
          PasswordAuthentication yes
          # Allow only the specific users when they come from the allowed subnets:
          AllowUsers {{ ssh_allowed_users_with_host | join(' ') }}
          Subsystem sftp internal-sftp
      notify: Restart SSH

    - name: Create SFTP directory
      file:
        path: "{{ remote_file_dir }}"
        state: directory
        owner: "{{ ssh_admin_user }}"
        group: "{{ ssh_admin_user }}"
        mode: '0755'

    - name: Create rsyslog ssh config file
      copy:
        dest: /etc/rsyslog.d/50-ssh.conf
        content: |
          # Log ssh auth events to a dedicated file
          auth,authpriv.* {{ ssh_auth_log }}
        owner: root
        group: root
        mode: '0644'
      notify: Restart Rsyslog

    - name: Ensure SSH auth log file exists with correct perms
      file:
        path: "{{ ssh_auth_log }}"
        state: touch
        owner: root
        group: adm
        mode: '0640'

  handlers:
    - name: Restart SSH
      service:
        name: ssh
        state: restarted

    - name: Restart Rsyslog
      service:
        name: rsyslog
        state: restarted
